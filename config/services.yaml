# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    articulos_directory: '%kernel.project_dir%/public/uploads/articulos'
    directorio_archivos: '/uploads/archivos/'
    slider_directory: '%kernel.project_dir%/public/uploads/sliders'

    # datos de OPENAI
    openai_api_key: '%env(OPENAI_API_KEY)%'
    openai_model: '%env(OPENAI_MODEL)%'
    
    # Parámetro para controlar si se usa el servicio mock o real
    usar_mock_openai: true
    
    # Configuración para importación de artículos
    import_email_to: 'sistemas@ciardi.com.ar'
    import_email_subject: 'Catalogo Ciardi - Importación de artículos'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Command\ImportarArticulosCommand:
        arguments:
            $doctrine: '@doctrine'
            $projectDir: '%kernel.project_dir%'
            $importLogger: '@monolog.logger.importacion_articulos'
            
    App\Command\ActualizarDescripcionesArticulosCommand:
        arguments:
            $projectDir: '%kernel.project_dir%'

    App\EventListener\ArticuloPreciosListener:
        tags:
            - { name: 'doctrine.orm.entity_listener' }

    App\Service\FileUploader:
        arguments:
            $targetDirectory: '%directorio_archivos%'

    App\Service\SliderArchivoService:
        arguments:
            $sliderDirectory: '%slider_directory%'

    App\Command\CrearDirectorioSliderCommand:
        arguments:
            $sliderDirectory: '%slider_directory%'

    App\Asistente\ServicioOpenAIChat:
        arguments:
            $apiKey: '%openai_api_key%'
            $modelo: '%openai_model%'

    App\Twig\AppExtension:
        tags: ['twig.extension']

    # Servicio personalizado para el logger de importación con formato específico
    monolog.formatter.importacion:
        class: Monolog\Formatter\LineFormatter
        arguments:
            - "[%%datetime%%] %%message%%\n"
            - "d-m-Y H:i:s"
            - true  # allowInlineLineBreaks
            - false # ignoreEmptyContextAndExtra
